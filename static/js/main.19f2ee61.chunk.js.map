{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","visibelTodos","handleActiveTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","setSortFilter","sortFilter","setSortText","sortText","value","onChange","event","currentTarget","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","activeTodo","setActiveTodo","useState","userName","setUserName","isLoaderUser","setLoaderUser","useEffect","userId","response","name","finally","href","App","todos","setTodos","isLoader","setLoader","console","log","useMemo","filter","toLowerCase","includes","preperTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19f2ee61.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  visibelTodos:Todo[];\n  handleActiveTodo: (todo:Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  visibelTodos,\n\n  handleActiveTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibelTodos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed\n              && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"far fas fa-check\" />\n                </span>\n              )}\n\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleActiveTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  setSortFilter: (filter: string) => void;\n  sortFilter: string;\n  setSortText: (text:string) => void;\n  sortText: string;\n\n};\n\nexport const TodoFilter:React.FC<Props> = ({\n  setSortFilter,\n  sortFilter,\n  setSortText,\n  sortText,\n}) => {\n  const handleoChangeValue\n    = (event: React.ChangeEvent<HTMLSelectElement>) => {\n      setSortFilter(event.currentTarget.value);\n    };\n\n  const handleChangeText\n    = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setSortText(event.currentTarget.value);\n    };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={sortFilter}\n            onChange={handleoChangeValue}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={sortText}\n          placeholder=\"Search...\"\n          onChange={handleChangeText}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {!!sortText\n            && (\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                aria-label=\"clear Filter Text\"\n                onClick={() => setSortText('')}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => {\n  return (\n    <div className=\"Loader\" data-cy=\"loader\">\n      <div className=\"Loader__content\" />\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nexport function wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  activeTodo: Todo;\n  setActiveTodo: (todo:Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  activeTodo,\n  setActiveTodo,\n}) => {\n  const [userName, setUserName] = useState('');\n  const [isLoaderUser, setLoaderUser] = useState(false);\n\n  useEffect(() => {\n    getUser(activeTodo.userId)\n      .then(response => {\n        setUserName(response.name);\n      })\n      .finally(() => {\n        setLoaderUser(true);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoaderUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${activeTodo.id}`}\n            </div>\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"close Todo Info\"\n              onClick={() => setActiveTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {activeTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {activeTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {userName}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nfunction preperTodos(todos:Todo[], sortText: string, sortFilter:string) {\n  return todos.filter(todo => todo.title.toLowerCase().includes(sortText.toLowerCase()))\n    .filter(todo => {\n      switch (sortFilter) {\n        case 'active':\n          return !todo.completed;\n\n        case 'completed':\n          return todo.completed;\n\n        default:\n          return true;\n      }\n    });\n}\n// const visibelTodosText:Todo[] = todos.filter(todo => todo.title.toLowerCase().includes(sortText.toLowerCase()));\n\n//   const visibelTodos = visibelTodosText.filter(todo => {\n//     switch (sortFilter) {\n//       case 'Active':\n//         return !todo.completed;\n\n//       case 'Completed':\n//         return todo.completed;\n\n//       default:\n//         return true;\n//     }\n//   });\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoader, setLoader] = useState(false);\n  const [activeTodo, setActiveTodo] = useState<Todo | null>(null);\n  const [sortFilter, setSortFilter] = useState('all');\n  const [sortText, setSortText] = useState('');\n\n  const handleActiveTodo = (todo:Todo) => (\n    activeTodo !== todo\n    && setActiveTodo(todo)\n  );\n\n  useEffect(() => {\n    getTodos()\n      .then(response => {\n        setTodos(response);\n      })\n      .finally(() => {\n        setLoader(true);\n      });\n  }, []);\n\n  // eslint-disable-next-line no-console\n  console.log(todos);\n\n  const visibelTodos:Todo[] = useMemo(() => (\n    preperTodos(\n      todos,\n      sortText,\n      sortFilter,\n    )\n  ), [todos, sortText, sortFilter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setSortFilter={setSortFilter}\n                sortFilter={sortFilter}\n                setSortText={setSortText}\n                sortText={sortText}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoader\n                ? (\n                  <TodoList\n                    visibelTodos={visibelTodos}\n                    handleActiveTodo={handleActiveTodo}\n                  />\n                )\n                : (<Loader />)}\n            </div>\n          </div>\n        </div>\n      </div>\n      {activeTodo !== null\n        && (\n          <TodoModal\n            activeTodo={activeTodo}\n            setActiveTodo={setActiveTodo}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}